<% context = (defined?(local_assigns) && local_assigns.fetch(:context, nil)) || :page %>
<% state   = (defined?(local_assigns) && local_assigns.fetch(:state, nil)) || :idle %>
<% state   = state.to_sym if state.respond_to?(:to_sym) %>
<% requirements = (defined?(local_assigns) && local_assigns.fetch(:requirements, nil)) || [] %>
<% needs_preview = (defined?(local_assigns) && local_assigns.fetch(:needs_preview, nil)) || [] %>
<% personality_changes = (defined?(local_assigns) && local_assigns.fetch(:personality_changes, nil)) || [] %>
<% visible   = state != :idle %>
<% action_frame_dom_id = action_panel_dom_id(user_pet) %>
<% sheet_style = "bottom: calc(env(safe-area-inset-bottom, 0px) + 5.5rem);" %>
<% sheet_classes = ["fixed", "left-0", "right-0", "z-40", "px-4", "transition-all", "duration-200", "ease-out", (visible ? "opacity-100 translate-y-0" : "opacity-0 translate-y-6 pointer-events-none")] %>
<% overlay_classes = ["fixed", "inset-0", "z-30", "bg-slate-950/70", "backdrop-blur-sm", "transition-opacity", "duration-200", "ease-out", (visible ? "opacity-100" : "opacity-0 pointer-events-none")] %>
<% aria_live = visible ? "polite" : "off" %>

<% if visible %>
  <div data-controller="action-panel">
    <button type="button"
            class="<%= overlay_classes.join(' ') %>"
            aria-label="Close action panel"
            data-action="action-panel#submitCancel"></button>

    <div class="<%= sheet_classes.join(' ') %>" style="<%= sheet_style %>" aria-hidden="false">
      <div class="pointer-events-auto mx-auto max-w-3xl rounded-3xl border border-slate-800 bg-slate-950/95 p-4 shadow-2xl shadow-slate-950/50"
           aria-live="<%= aria_live %>">
    <% case state %>
    <% when :idle %>
      <div class="text-center text-xs text-slate-500">
        Choose an action to interact with <%= user_pet.name.presence || user_pet.pet.name %>.
      </div>

    <% when :error %>
      <div class="space-y-3">
        <p class="text-sm font-semibold text-rose-200"><%= message.presence || "Action unavailable." %></p>
        <% if defined?(requirements) && requirements.present? %>
          <% missing = requirements.select { |req| req[:quantity].to_i < req[:required_quantity].to_i } %>
          <% if missing.any? %>
            <div class="space-y-1 text-xs text-slate-300">
              <p class="font-semibold text-slate-200">Missing items:</p>
              <ul class="list-disc space-y-0.5 pl-4">
                <% missing.each do |req| %>
                  <li><%= req[:description].presence || req[:type].to_s.humanize %> (<%= req[:quantity] %> / <%= req[:required_quantity] %>)</li>
                <% end %>
              </ul>
            </div>
          <% end %>
        <% end %>
        <div class="flex justify-end gap-2">
          <%= button_to interact_preview_user_pet_path(user_pet),
                        method: :post,
                        params: { cancel: 1, context: context },
                        form: { data: { turbo_frame: action_frame_dom_id, 'action-panel-target': 'cancelForm' } },
                        class: "inline-flex items-center gap-2 rounded-full border border-slate-700/70 bg-slate-900/60 px-4 py-2 text-sm font-semibold text-slate-200 transition hover:text-white focus:outline-none focus-visible:ring-2 focus-visible:ring-indigo-400 focus-visible:ring-offset-2 focus-visible:ring-offset-slate-950" do %>
            Exit
          <% end %>
        </div>
      </div>

    <% when :confirm %>
      <div class="space-y-5">
        <div>
          <p class="text-sm font-semibold text-slate-100">
            <%= interaction.to_s.humanize %> with <%= user_pet.name.presence || user_pet.pet.name %>?
          </p>
          <% if message.present? %>
            <p class="text-xs text-slate-400"><%= message %></p>
          <% end %>
        </div>

        <div class="grid gap-3 sm:grid-cols-2">
          <div class="rounded-2xl border border-slate-800/80 bg-slate-900/60 px-3 py-2 text-xs text-slate-300">
            <p class="font-semibold text-slate-100">Energy Cost</p>
            <p class="mt-1 text-sm text-emerald-200"><%= energy_cost %> energy</p>
          </div>
          <% if requirements.present? %>
            <div class="space-y-2 rounded-2xl border border-slate-800/80 bg-slate-900/60 px-3 py-2 text-xs text-slate-300">
              <p class="font-semibold text-slate-100">Required Items</p>
              <div class="space-y-2">
                <% requirements.each do |req| %>
                  <div class="flex items-start justify-between gap-3 rounded-xl border border-slate-800/70 bg-slate-900/80 px-3 py-2">
                    <div class="space-y-1">
                      <p class="text-sm font-semibold text-slate-100"><%= req[:item]&.name || req[:type].to_s.humanize %></p>
                      <% if req[:description].present? %>
                        <p class="text-[11px] leading-relaxed text-slate-400"><%= req[:description] %></p>
                      <% end %>
                    </div>
                    <span class="inline-flex items-center gap-1 rounded-full bg-slate-800/80 px-2 py-1 text-[11px] font-semibold text-slate-200">
                      <%= req[:quantity] %> / <%= req[:required_quantity] %>
                    </span>
                  </div>
                <% end %>
              </div>
            </div>
          <% end %>
        </div>

        <% display_needs = [:hunger, :hygiene, :boredom, :injury_level, :mood] %>
        <% preview_lookup = needs_preview.each_with_object({}) { |entry, memo| memo[entry[:key]] = entry } %>
        <div class="space-y-2">
          <p class="text-xs font-semibold uppercase tracking-wide text-slate-400">Pet Care Needs</p>
          <div class="grid grid-cols-2 gap-2">
            <% display_needs.each do |need_key| %>
              <% entry        = preview_lookup[need_key] %>
              <% current_val  = (need_key == :mood ? user_pet.mood.to_f : user_pet.send(need_key).to_f) rescue 0.0 %>
              <% before       = entry ? entry[:before].to_f : current_val %>
              <% after        = entry ? entry[:after].to_f : current_val %>
              <% delta        = (after - before).round(1) %>
              <% before_pct   = entry ? entry[:before_percent].to_f : [[before, 0.0].max, 100.0].min %>
              <% after_pct    = entry ? entry[:after_percent].to_f  : [[after, 0.0].max, 100.0].min %>
              <% change_width = (after_pct - before_pct).abs %>
              <% change_start = [before_pct, after_pct].min %>
              <% delta_class  = delta > 0 ? "text-emerald-300" : delta < 0 ? "text-rose-300" : "text-slate-400" %>
              <% after_fill_class = after_pct >= 60 ? "bg-emerald-600/80" : "bg-rose-600/80" %>
              <% change_fill_class = delta >= 0 ? "bg-emerald-300/90" : "bg-rose-400/90" %>
              <% formatted_before = before % 1 == 0 ? before.to_i : before %>
              <% formatted_after  = after % 1 == 0 ? after.to_i : after %>
              <% formatted_delta  = delta % 1 == 0 ? delta.to_i : delta %>
              <% delta_value = formatted_delta > 0 ? "+#{formatted_delta}" : formatted_delta.to_s %>
              <div class="space-y-1.5 rounded-xl border border-slate-800/70 bg-slate-900/60 px-3 py-2 text-[11px] text-slate-300">
                <div class="flex items-center justify-between text-xs">
                  <span class="font-semibold text-slate-100 truncate"><%= need_label(need_key) %></span>
                  <span class="font-semibold <%= delta_class %>"><%= delta_value %></span>
                </div>
                <div class="flex items-center justify-between text-[11px] text-slate-400">
                  <span>Current <span class="font-semibold text-slate-200"><%= formatted_before %></span></span>
                  <span>After <span class="font-semibold text-slate-200"><%= formatted_after %></span></span>
                </div>
                <div class="relative h-2 w-full overflow-hidden rounded-full bg-slate-800">
                  <div class="absolute inset-y-0 left-0 rounded-full <%= after_fill_class %>" style="width: <%= after_pct %>%;" aria-hidden="true"></div>
                  <% unless change_width.zero? %>
                    <div class="absolute inset-y-0 rounded-full <%= change_fill_class %>"
                         style="left: <%= change_start %>%; width: <%= change_width %>%;" aria-hidden="true"></div>
                  <% end %>
                </div>
                <p class="sr-only">
                  <%= need_label(need_key) %> changes from <%= formatted_before %> to <%= formatted_after %>.
                </p>
              </div>
            <% end %>
          </div>
        </div>
<!--
        <% if personality_changes.any? %>
          <div class="space-y-2">
            <p class="text-xs font-semibold uppercase tracking-wide text-slate-400">Personality Shift</p>
            <ul class="grid gap-2 text-xs text-slate-300 sm:grid-cols-2">
              <% personality_changes.each do |change| %>
                <% formatted_delta = change[:delta] % 1 == 0 ? change[:delta].to_i : change[:delta] %>
                <% pct_class = formatted_delta > 0 ? "text-emerald-300" : formatted_delta < 0 ? "text-rose-300" : "text-slate-300" %>
                <% pct_value = formatted_delta > 0 ? "+#{formatted_delta}" : formatted_delta.to_s %>
                <li class="rounded-2xl border border-slate-800/80 bg-slate-900/60 px-3 py-2 flex items-center justify-between">
                  <span class="font-semibold text-slate-100"><%= change[:label] %></span>
                  <span class="font-semibold <%= pct_class %>"><%= pct_value %></span>
                </li>
              <% end %>
            </ul>
          </div>
        <% end %>
-->
        <% primary_item = requirements.present? ? requirements.first : nil %>
        <% primary_item_type = primary_item&.dig(:item)&.item_type || primary_item&.dig(:type) %>
        <% primary_icon = primary_item_type ? ApplicationController.helpers.care_item_image_path(primary_item_type) : nil %>
        <% available_qty = primary_item&.dig(:quantity).to_i if primary_item %>

        <div class="flex items-center justify-between gap-3">
          <%= button_to interact_preview_user_pet_path(user_pet),
                        method: :post,
                        params: { cancel: 1, context: context },
                        form: { data: { turbo_frame: action_frame_dom_id, 'action-panel-target': 'cancelForm' } },
                        class: "inline-flex items-center gap-2 rounded-full border border-slate-700/70 bg-slate-900/60 px-4 py-2 text-sm font-semibold text-slate-200 transition hover:text-white focus:outline-none focus-visible:ring-2 focus-visible:ring-slate-500 focus-visible:ring-offset-2 focus-visible:ring-offset-slate-950" do %>
            Exit
          <% end %>
          <%= button_to interact_user_pet_path(user_pet),
                        method: :post,
                        params: { interaction_type: interaction, context: context },
                        form: { data: { turbo_frame: action_frame_dom_id } },
                        class: "inline-flex w-auto min-w-[8rem] items-center justify-between gap-4 rounded-full bg-emerald-600 px-5 py-2 text-sm font-semibold text-white transition hover:bg-emerald-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-emerald-300 focus-visible:ring-offset-2 focus-visible:ring-offset-slate-950" do %>
            <div class="flex items-center gap-3">
              <% if primary_icon.present? %>
                <%= image_tag primary_icon, alt: "", class: "h-8 w-8 rounded-full border border-emerald-400/40 bg-emerald-900/40 object-contain p-1" %>
              <% else %>
                <span class="text-lg" aria-hidden="true">✔</span>
              <% end %>
              <% if available_qty %>
                <span class="rounded-full bg-emerald-500/30 px-2 py-0.5 text-[11px] font-semibold text-emerald-100">x<%= available_qty %></span>
              <% end %>
            </div>
            <span class="uppercase tracking-wide text-xs text-emerald-100">Use Item</span>
          <% end %>
        </div>
      </div>

    <% when :success %>
      <div class="space-y-3">
        <p class="text-sm font-semibold text-emerald-200"><%= message.presence || "Action completed successfully." %></p>
        <div class="flex justify-end gap-2">
          <%= button_to interact_preview_user_pet_path(user_pet),
                        method: :post,
                        params: { cancel: 1, context: context },
                        form: { data: { turbo_frame: action_frame_dom_id, 'action-panel-target': 'cancelForm' } },
                        class: "inline-flex items-center gap-2 rounded-full border border-slate-700/70 bg-slate-900/60 px-4 py-2 text-sm font-semibold text-slate-200 transition hover:text-white focus:outline-none focus-visible:ring-2 focus-visible:ring-indigo-400 focus-visible:ring-offset-2 focus-visible:ring-offset-slate-950" do %>
            Exit
          <% end %>
        </div>
      </div>
    <% end %>
    </div>
  </div>
  </div>
<% else %>
  <div class="pointer-events-none opacity-0 translate-y-6 transition-all duration-200 ease-out" aria-hidden="true"></div>
<% end %>
