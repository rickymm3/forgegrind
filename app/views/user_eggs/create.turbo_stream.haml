- relevant_item_ids = EggItemCost.distinct.pluck(:item_id)
- user_items = current_user.user_items.includes(:item).where(item_id: relevant_item_ids)
- eggs = Egg.enabled.includes(:currency, egg_item_costs: :item)
- stat = current_user.user_stat&.reload
- highlighted_id = @egg&.id

- if stat
  = turbo_stream.update "user-currency-trophies" do
    = number_with_delimiter(stat.trophies)
  = turbo_stream.update "user-currency-diamonds" do
    = number_with_delimiter(stat.diamonds)
  = turbo_stream.update "user-currency-glow-essence" do
    = number_with_delimiter(stat.glow_essence)

= turbo_stream.replace "currency_balances", partial: "shared/currency_badges", locals: { currencies: currency_balances_for(current_user) }

= turbo_stream.update "user-inventory" do
  = render "adopt/user_inventory", user_items: user_items, user_stat: stat

- user_items.each do |user_item|
  = turbo_stream.update "user-item-quantity-#{user_item.item_id}" do
    = "x#{user_item.quantity}"

= turbo_stream.update "egg-list" do
  .grid.grid-cols-1.md:grid-cols-2.xl:grid-cols-3.gap-8
    - eggs.each do |egg|
      - can_afford = current_user.can_afford_egg?(egg)
      = render "adopt/egg_card", egg: egg, can_afford: can_afford, highlight: (highlighted_id == egg.id)

= turbo_stream.append "toast-container" do
  = render "shared/toast", message: "Adopted a #{@egg.name}!"
